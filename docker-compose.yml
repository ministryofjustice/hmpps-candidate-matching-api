version: "3"
services:
  hmpps-candidate-matching-api:
    build:
      context: .
    network_mode: "host"
    container_name: hmpps-candidate-matching-api
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=developer
  
  #  hmpps-auth:
  #    image: quay.io/hmpps/hmpps-auth:latest
  #    networks:
  #      - hmpps
  #    container_name: edu-hmpps-auth
  #    ports:
  #      - "8090:8080"
  #    healthcheck:
  #      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
  #    environment:
  #      - SERVER_PORT=8080
  #      - SPRING_PROFILES_ACTIVE=dev

  candidate-matching-db:
    image: postgres
    networks:
      - hmpps
    # network_mode: "host"
    container_name:   candidate-matching-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=candidate-matching
      - POSTGRES_USER=candidate-matching
      - POSTGRES_DB=candidate-matching

  localstack:
    image: localstack/localstack:0.14.0
    networks:
      - hmpps
    container_name: localstack-candidate-matching-api
    ports:
      - "4566-4597:4566-4597"
      - "8999:8080"
    environment:
      - SERVICES=sns,sqs
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_EXECUTION_ENV=True
      - DEFAULT_REGION=eu-west-2
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

networks:
  hmpps:
